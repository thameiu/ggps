// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt

  username String @unique
  email String @unique
  hash String

  firstName String?
  lastName String?


  events Entry[]

  messages Message[]

  Access Access[]
}

model Event{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt

  title String
  description String
  beginDate DateTime
  endDate DateTime
  street String
  number String
  city String
  zipCode String
  country String  
  latitude Float
  longitude Float
  

  entrants Entry[]
  chatroom Chatroom?
}


model Entry{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt

  userId Int
  eventId Int
  user User @relation(fields: [userId], references: [id])
  event Event @relation(fields: [eventId], references: [id])
  status String
  message String?
  rating Int?
  ratingMessage String?
}

model Message{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt

  userId Int
  chatroomId Int
  content String
  pinned Boolean
  user User @relation(fields: [userId], references: [id])
  chatroom Chatroom @relation(fields: [chatroomId], references: [id])
}

model Chatroom{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt

  eventId Int @unique
  event Event @relation(fields: [eventId], references: [id])
  messages Message[]

  Access Access[]
}

model Access{
  id Int @id @default(autoincrement())
  createdAt DateTime @default(now())
  updateddAt DateTime @updatedAt

  userId Int
  chatroomId Int
  user User @relation(fields: [userId], references: [id])
  chatroom Chatroom @relation(fields: [chatroomId], references: [id])
  role String
  
}
